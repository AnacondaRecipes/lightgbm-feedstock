{% set name = "lightgbm" %}
{% set version = "3.3.2" %}
{% set sha256 = "5d25d16e77c844c297ece2044df57651139bc3c8ad8c4108916374267ac68b64" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vv"  # [not osx]
  script: 'export LDFLAGS="${LDFLAGS} -L$PREFIX/lib"; {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vv'  # [osx]
  # By default, installation in environment with 32-bit Python is prohibited 
  # by the maintainers, see https://github.com/microsoft/LightGBM/tree/master/python-package#build-32-bit-version-with-32-bit-python.
  skip: True  # [win32]
  missing_dso_whitelist:  # [s390x]
    # Mildly concerned this triggers an overlinking warning, but it may be a
    # sign some S390X-specific changes needed in conda-build.  Leaving this in
    # while we investigate so the linux-s390x build out can continue.
    - "*/ld64.so.1"   # [s390x]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python            # [build_platform != target_platform]
    - cmake >=3.8
    - make              # [unix]
    - llvm-openmp       # [osx]
  host:
    - python
    - pip
    - setuptools
    - wheel
    - llvm-openmp       # [osx]
    - libgomp  # [linux64]
  run:
    - python
    - numpy
    - scipy
    - scikit-learn !=0.22.0
    - llvm-openmp       # [osx]
    # Using selector until packages for other platforms are (re)built using
    # newer defaults toolchains that use the `_openmp_mutex` mechanism.
    - _openmp_mutex                      # [s390x]

test:
  imports:
    - lightgbm
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/Microsoft/LightGBM
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'LightGBM is a gradient boosting framework that uses tree based learning algorithms.'

  description: |
    A fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.
  doc_url: http://lightgbm.readthedocs.io/en/latest/
  dev_url: https://github.com/Microsoft/LightGBM

extra:
  recipe-maintainers:
    - synapticarbors
    - aldanor
